[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nanogpt"
version = "0.1.0"
description = "A minimalist, efficient implementation of GPT language models"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Andrej Karpathy", email = "example@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "numpy",
    "transformers",
    "datasets",
    "tiktoken",
    "wandb",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
]

[project.urls]
"Homepage" = "https://github.com/karpathy/nanoGPT"
"Bug Tracker" = "https://github.com/karpathy/nanoGPT/issues"

[project.scripts]
nanogpt-train = "scripts.train:main"
nanogpt-sample = "scripts.sample:main"
nanogpt-bench = "scripts.bench:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["nanogpt*"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310"]

[tool.isort]
profile = "black"
line_length = 100

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
